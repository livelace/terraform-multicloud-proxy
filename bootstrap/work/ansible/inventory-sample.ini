; WARNING: This file must be renamed to "inventory.ini".

; Configurations that should be processed. Feel free to comment unnecessary CSP (cloud service provider).
[amazon]
amazon ansible_connection=local

[google]
google ansible_connection=local

[yandex]
yandex ansible_connection=local

; All these settings can be used inside specific CSP individually.
; E.g. "root_password" inside any CSP has higher priority over "root_password" in "[all:vars]".
[all:vars]
; We build virtual images locally (one per cloud with individual settings) and
; upload them to the clouds.
; Currently we use Alpine Linux because of its lightweight.
alpine_mirror_url           = "http://dl-cdn.alpinelinux.org"
alpine_iso_url              = "http://dl-cdn.alpinelinux.org/alpine/v3.11/releases/x86_64/alpine-extended-3.11.0-x86_64.iso"
alpine_iso_checksum         = "86db79cad311f1c3cd3ca9e68223b922b1e5cc4ab18a40ae6aa6727bd27b8df4"
alpine_iso_checksum_type    = "sha256"

; Settings are related to overall disk size and individual partitions (size in megabytes).
disk_size                   = 1024
boot_size                   = 100
swap_size                   = 256

; Amazon uses special validation mechanism for imported images that checks some
; compatibility settings.
; This setting allows to avoid kernel version checks (original Alpine kernel stays unchanged).
; https://serverfault.com/a/801185
fake_kernel_version         = "3.13.0-031300-generic"

; The names of public and secret SSH keys,
; they will be added to "/root/.ssh/{authorized_keys, id_rsa, id_rsa.pub}".
; These keys must be placed in "/conf/auth" directory that was initialized by "init" command.
ssh_secret_key              = "multicloud"
ssh_public_key              = "multicloud.pub"

root_password               = "PASSWORD"

; List of whitelisted subnets/ip addresses. These records will be added to:
; 1. Cloud firewalls (where applicable).
; 2. Iptables rules of the operating system itself.
; 3. Whitelist settings of tinyproxy, tor, sockd.
; All other connections will be dropped.
whitelist      		        = ["1.1.1.1/32", "192.168.0.0/24", "0.0.0.0/0"]

; Ports settings.
proxy_port                  = 8888
socks_port                  = 1080
tor_port                    = 9050

; Amount of virtual machines in every cloud.
count                       = 3

; PowerDNS settings that allow to register hostnames of deployed virtual machines.
; If you change these settings you will have to modify "dns" Dockerfile and rebuild docker image.
powerdns_enable             = "false"
powerdns_api_key            = "powerdns"
powerdns_server_url         = "http://172.17.0.2:8081"
powerdns_base_zone          = "terraform-multicloud-proxy.net"

[amazon:vars]
region                      = "eu-west-3"
availability_zone           = "eu-west-3c"

access_key                  = "<ACCESS_KEY>"
secret_key                  = "<SECRET_KEY>"

bucket_name                 = "multicloud-proxy-bucket"
image_name                  = "multicloud-proxy-image"

network_name                = "multicloud-proxy-network"
network_cidr                = "10.52.0.0/16"

subnet_name                 = "multicloud-proxy-subnet"
subnet_cidr                 = "10.52.52.0/24"

internet_gateway            = "multicloud-proxy"
security_group              = "multicloud-proxy"
route_table                 = "multicloud-proxy"

instance_name               = "proxy"
instance_type               = "t2.micro"

[google:vars]
project                     = "<PROJECT_NAME>"
region                      = "europe-north1"
zone                        = "europe-north1-c"

; service account file must be placed in "/conf/auth" directory that was initialized by "init" command.
service_account_key_file    = "<SERVICE_ACCOUNT_FILE>"

bucket_name                 = "multicloud-proxy-bucket"
image_name                  = "multicloud-proxy-image"

firewall_name               = "multicloud-proxy"
network_name                = "multicloud-proxy-network"

subnet_name                 = "multicloud-proxy-subnet"
subnet_cidr                 = "10.52.52.0/24"

instance_name               = "proxy"
machine_type                = "f1-micro"

[yandex:vars]
cloud_id                    = "<CLOUD_ID>"
folder_id                   = "<FOLDER_ID>"
zone                        = "ru-central1-a"

; service account file must be placed in "/conf/auth" directory that was initialized by "init" command.
service_account_key_file    = "<SERVICE_ACCOUNT_FILE>"

; need for s3 storage operations.
storage_access_key          = "<STORAGE_ACCESS_KEY>"
storage_secret_key          = "<STORAGE_SECRET_KEY>"

bucket_name                 = "multicloud-proxy-bucket"
image_name                  = "multicloud-proxy"

network_name                = "multicloud-proxy-network"
subnet_name                 = "multicloud-proxy-subnet"
subnet_cidr                 = "10.52.52.0/24"

instance_name               = "proxy"
platform_id                 = "standard-v1"

cores                       = 1
core_fraction               = 5
memory                      = 0.5

